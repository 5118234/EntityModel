<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Yizuan.Service.ApiContract</name>
    </assembly>
    <members>
        <member name="T:Yizuan.Service.Api.IApiResultData">
            <summary>
            表示API返回数据
            </summary>
        </member>
        <member name="T:Yizuan.Service.Api.IApiResult">
            <summary>
            API返回基类
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.IApiResult.Result">
            <summary>
            成功或失败标记
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.IApiResult.Status">
            <summary>
            API执行状态（为空表示状态正常）
            </summary>
        </member>
        <member name="T:Yizuan.Service.Api.IApiResult`1">
            <summary>
            API返回基类
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.IApiResult`1.ResultData">
            <summary>
            返回值
            </summary>
        </member>
        <member name="T:Yizuan.Service.Api.IApiStatusResult">
            <summary>
            API状态返回（一般在出错时发生）
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.IApiStatusResult.ErrorCode">
            <summary>
            错误码（系统定义）
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.IApiStatusResult.HttpCode">
            <summary>
            对应HTTP错误码（参考）
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.IApiStatusResult.Message">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.IApiStatusResult.InnerMessage">
            <summary>
            内部提示信息
            </summary>
        </member>
        <member name="T:Yizuan.Service.Api.ApiStatsResult">
            <summary>
            API状态返回接口实现
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.ApiStatsResult.ErrorCode">
            <summary>
            错误码
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.ApiStatsResult.HttpCode">
            <summary>
            对应HTTP错误码（参考）
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.ApiStatsResult.Message">
            <summary>
            提示信息
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.ApiStatsResult.InnerMessage">
            <summary>
            内部提示信息
            </summary>
        </member>
        <member name="T:Yizuan.Service.Api.ApiResult">
            <summary>
            API返回基类
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.ApiResult.Result">
            <summary>
            成功或失败标记
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.ApiResult.Yizuan#Service#Api#IApiResult#Status">
            <summary>
            API执行状态（为空表示状态正常）
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.ApiResult.Status">
            <summary>
            API执行状态（为空表示状态正常）
            </summary>
        </member>
        <member name="M:Yizuan.Service.Api.ApiResult.Error(System.Int32)">
            <summary>
            生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <returns></returns>
        </member>
        <member name="M:Yizuan.Service.Api.ApiResult.Error(System.Int32,System.String)">
            <summary>
            生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Yizuan.Service.Api.ApiResult.Succees">
            <summary>
            生成一个成功的标准返回
            </summary>
            <returns></returns>
        </member>
        <member name="T:Yizuan.Service.Api.ApiValueResult`1">
            <summary>
            API返回数据泛型类
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.ApiValueResult`1.ResultData">
            <summary>
            返回值
            </summary>
        </member>
        <member name="M:Yizuan.Service.Api.ApiValueResult`1.Succees(`0)">
            <summary>
            生成一个成功的标准返回
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yizuan.Service.Api.ApiValueResult`1.ErrorResult(System.Int32)">
            <summary>
            生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <returns></returns>
        </member>
        <member name="M:Yizuan.Service.Api.ApiValueResult`1.ErrorResult(System.Int32,System.String)">
            <summary>
            生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Yizuan.Service.Api.ApiResult`1">
            <summary>
            API返回数据泛型类
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.ApiResult`1.ResultData">
            <summary>
            返回值
            </summary>
        </member>
        <member name="M:Yizuan.Service.Api.ApiResult`1.Succees(`0)">
            <summary>
            生成一个成功的标准返回
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yizuan.Service.Api.ApiResult`1.ErrorResult(System.Int32)">
            <summary>
            生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <returns></returns>
        </member>
        <member name="M:Yizuan.Service.Api.ApiResult`1.ErrorResult(System.Int32,System.String)">
            <summary>
            生成一个包含错误码的标准返回
            </summary>
            <param name="errCode">错误码</param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Yizuan.Service.Api.ApiList`1">
            <summary>
            表示API返回的列表
            </summary>
            <typeparam name="TData"></typeparam>
        </member>
        <member name="M:Yizuan.Service.Api.ApiList`1.#ctor(System.Collections.Generic.IList{`0})">
            <summary>
            构造
            </summary>
            <param name="list"></param>
        </member>
        <member name="T:Yizuan.Service.Api.ApiArrayResult`1">
            <summary>
            API返回数组泛型类
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.ApiArrayResult`1.Result">
            <summary>
            成功或失败标记
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.ApiArrayResult`1.Status">
            <summary>
            API执行状态（为空表示状态正常）
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.ApiArrayResult`1.Yizuan#Service#Api#IApiResult{Yizuan#Service#Api#ApiList{TData}}#ResultData">
            <summary>
            返回值
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.ApiArrayResult`1.ResultData">
            <summary>
            返回值
            </summary>
        </member>
        <member name="T:Yizuan.Service.Api.ApiPageResult">
            <summary>
            API返回数组泛型类
            </summary>
        </member>
        <member name="T:Yizuan.Service.Api.ApiPageResult`1">
            <summary>
            API返回数组泛型类
            </summary>
        </member>
        <member name="T:Yizuan.Service.Api.ApiPage">
            <summary>
            API返回分页信息
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.ApiPage.PageIndex">
            <summary>
            当前页号（从1开始）
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.ApiPage.PageSize">
            <summary>
            页行数
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.ApiPage.PageCount">
            <summary>
            总页数
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.ApiPage.RowCount">
            <summary>
            总行数
            </summary>
        </member>
        <member name="T:Yizuan.Service.Api.ApiPageData`1">
            <summary>
            API返回分布页数据
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.ApiPageData`1.Rows">
            <summary>
            返回值
            </summary>
        </member>
        <member name="T:Yizuan.Service.Api.ErrorCode">
            <summary>
            系统错误代码
            </summary>
        </member>
        <member name="M:Yizuan.Service.Api.ErrorCode.GetMessage(System.Int32)">
            <summary>
            取得错误码对应的消息文本
            </summary>
            <param name="eid">错误码</param>
            <returns>消息文本</returns>
        </member>
        <member name="F:Yizuan.Service.Api.ErrorCode.Success">
            <summary>
            正确
            </summary>
        </member>
        <member name="F:Yizuan.Service.Api.ErrorCode.UnknowError">
            <summary>
            未知错误
            </summary>
        </member>
        <member name="F:Yizuan.Service.Api.ErrorCode.ArgumentError">
            <summary>
            参数错误
            </summary>
        </member>
        <member name="F:Yizuan.Service.Api.ErrorCode.NetworkError">
            <summary>
            网络错误
            </summary>
        </member>
        <member name="F:Yizuan.Service.Api.ErrorCode.InnerError">
            <summary>
            服务器内部错误
            </summary>
        </member>
        <member name="F:Yizuan.Service.Api.ErrorCode.DenyAccess">
            <summary>
            拒绝访问
            </summary>
        </member>
        <member name="F:Yizuan.Service.Api.ErrorCode.Auth_RefreshToken_Unknow">
            <summary>
            未知的RefreshToken
            </summary>
        </member>
        <member name="F:Yizuan.Service.Api.ErrorCode.Auth_ServiceKey_Unknow">
            <summary>
            未知的ServiceKey
            </summary>
        </member>
        <member name="F:Yizuan.Service.Api.ErrorCode.Auth_AccessToken_Unknow">
            <summary>
            未知的AccessToken
            </summary>
        </member>
        <member name="F:Yizuan.Service.Api.ErrorCode.Auth_User_Unknow">
            <summary>
            未知的用户
            </summary>
        </member>
        <member name="F:Yizuan.Service.Api.ErrorCode.Auth_Device_Unknow">
            <summary>
            未知的设备识别码
            </summary>
        </member>
        <member name="F:Yizuan.Service.Api.ErrorCode.Auth_AccessToken_TimeOut">
            <summary>
            令牌过期
            </summary>
        </member>
        <member name="T:Yizuan.Service.Api.IApiArgument">
            <summary>
            表示API请求参数
            </summary>
        </member>
        <member name="M:Yizuan.Service.Api.IApiArgument.ToFormString">
            <summary>
            转为Form的文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:Yizuan.Service.Api.IApiArgument.Validate(System.String@)">
            <summary>
            数据校验
            </summary>
            <param name="message">返回的消息</param>
            <returns>成功则返回真</returns>
        </member>
        <member name="T:Yizuan.Service.Api.Argument`1">
            <summary>
            请求参数
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.Argument`1.Value">
            <summary>
            AT
            </summary>
        </member>
        <member name="M:Yizuan.Service.Api.Argument`1.Validate(System.String@)">
            <summary>
            数据校验
            </summary>
            <param name="message">返回的消息</param>
            <returns>成功则返回真</returns>
        </member>
        <member name="T:Yizuan.Service.Api.PageArgument">
            <summary>
            分页请求的参数
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.PageArgument.Page">
            <summary>
            页号
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.PageArgument.PageSize">
            <summary>
            每页行数
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.PageArgument.Order">
            <summary>
            每页行数
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.PageArgument.Desc">
            <summary>
            反序
            </summary>
        </member>
        <member name="M:Yizuan.Service.Api.PageArgument.Validate(System.String@)">
            <summary>
            数据校验
            </summary>
            <param name="message">返回的消息</param>
            <returns>成功则返回真</returns>
        </member>
        <member name="T:Yizuan.Service.Api.IBearValidater">
            <summary>
            用户身份校验
            </summary>
        </member>
        <member name="M:Yizuan.Service.Api.IBearValidater.ValidateServiceKey(System.String)">
            <summary>
            检查调用的ServiceKey（来自内部调用）
            </summary>
            <param name="token">令牌</param>
            <returns></returns>
        </member>
        <member name="M:Yizuan.Service.Api.IBearValidater.VerifyAccessToken(System.String)">
            <summary>
            检查AT(来自登录用户)
            </summary>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Yizuan.Service.Api.IBearValidater.ValidateDeviceId(System.String)">
            <summary>
            检查设备标识（来自未登录用户）
            </summary>
            <param name="token">令牌</param>
            <returns></returns>
        </member>
        <member name="M:Yizuan.Service.Api.IBearValidater.GetUserProfile(System.Int64)">
            <summary>
            检查设备标识（来自未登录用户）
            </summary>
            <param name="uid">用户ID</param>
            <returns></returns>
        </member>
        <member name="T:Yizuan.Service.Api.IUserProfile">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.IUserProfile.UserId">
            <summary>
            用户数字标识
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.IUserProfile.DeviceId">
            <summary>
            用户所在设备标识
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.IUserProfile.NickName">
            <summary>
            用户昵称
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.IUserProfile.PhoneNumber">
            <summary>
            用户手机号
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.IUserProfile.JoinTime">
            <summary>
            加入系统时间
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.IUserProfile.ApiServerTime">
            <summary>
            当前服务器时间
            </summary>
        </member>
        <member name="T:Yizuan.Service.Api.ApiContext">
            <summary>
            API调用上下文（流程中使用）
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.ApiContext.IsClientTest">
            <summary>
            是否客户端模拟
            </summary>
        </member>
        <member name="F:Yizuan.Service.Api.ApiContext._requestContext">
            <summary>
            当前调用上下文
            </summary>
        </member>
        <member name="F:Yizuan.Service.Api.ApiContext._user">
            <summary>
            当前调用上下文
            </summary>
        </member>
        <member name="M:Yizuan.Service.Api.ApiContext.SetContext(Yizuan.Service.Api.ApiContext)">
            <summary>
            设置当前上下文
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Yizuan.Service.Api.ApiContext.SetCustomer(Yizuan.Service.Api.IUserProfile)">
            <summary>
            设置当前用户
            </summary>
            <param name="customer"></param>
        </member>
        <member name="M:Yizuan.Service.Api.ApiContext.SetRequestContext(Yizuan.Service.Api.InternalCallContext)">
            <summary>
            设置当前请求上下文
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:Yizuan.Service.Api.ApiContext.Current">
            <summary>
            当前实例对象
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.ApiContext.RequestContext">
            <summary>
            当前调用上下文
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.ApiContext.Customer">
            <summary>
            当前调用的客户信息
            </summary>
        </member>
        <member name="T:Yizuan.Service.Api.InternalCallContext">
            <summary>
            内部服务调用上下文（跨系统边界传递）
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.InternalCallContext.ServiceKey">
            <summary>
            请求服务身份
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.InternalCallContext.RequestId">
            <summary>
            全局请求标识（源头为用户请求）
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.InternalCallContext.UserId">
            <summary>
            当前请求的用户标识
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.InternalCallContext.Bear">
            <summary>
            当前请求的HTTP Header
            </summary>
        </member>
        <member name="P:Yizuan.Service.Api.InternalCallContext.ThreadId">
            <summary>
            线程标识
            </summary>
        </member>
        <member name="T:Yizuan.Service.ApiContract.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:Yizuan.Service.ApiContract.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Yizuan.Service.ApiContract.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="T:GoodLin.OAuth.Api.UserProfile">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:GoodLin.OAuth.Api.UserProfile.UserId">
            <summary>
            用户数字标识
            </summary>
        </member>
        <member name="P:GoodLin.OAuth.Api.UserProfile.DeviceId">
            <summary>
            用户所在设备标识
            </summary>
        </member>
        <member name="P:GoodLin.OAuth.Api.UserProfile.NickName">
            <summary>
            用户昵称
            </summary>
        </member>
        <member name="P:GoodLin.OAuth.Api.UserProfile.PhoneNumber">
            <summary>
            用户手机号
            </summary>
        </member>
        <member name="P:GoodLin.OAuth.Api.UserProfile.JoinTime">
            <summary>
            加入系统时间
            </summary>
        </member>
        <member name="P:GoodLin.OAuth.Api.UserProfile.ApiServerTime">
            <summary>
            当前服务器时间
            </summary>
        </member>
        <member name="P:GoodLin.OAuth.Api.UserProfile.State">
            <summary>
            状态
            </summary>
        </member>
        <member name="T:Agebull.Common.Server.Logging.LocaleItem">
            <summary>
              本地信息
            </summary>
        </member>
        <member name="P:Agebull.Common.Server.Logging.LocaleItem.Name">
            <summary>
              名称
            </summary>
        </member>
        <member name="P:Agebull.Common.Server.Logging.LocaleItem.Description">
            <summary>
              说明
            </summary>
        </member>
        <member name="P:Agebull.Common.Server.Logging.LocaleItem.Value">
            <summary>
              值
            </summary>
        </member>
        <member name="T:Agebull.Common.Server.Logging.Log4Recorder">
            <summary>
              日志处理类
            </summary>
        </member>
        <member name="F:Agebull.Common.Server.Logging.Log4Recorder._Logname">
            <summary>
              日志名
            </summary>
        </member>
        <member name="M:Agebull.Common.Server.Logging.Log4Recorder.#ctor">
            <summary>
              默认构造
            </summary>
        </member>
        <member name="M:Agebull.Common.Server.Logging.Log4Recorder.#ctor(System.String)">
            <summary>
              配置文件构造
            </summary>
        </member>
        <member name="P:Agebull.Common.Server.Logging.Log4Recorder.Logname">
            <summary>
              日志名
            </summary>
        </member>
        <member name="P:Agebull.Common.Server.Logging.Log4Recorder.Log">
            <summary>
              日志处理对象
            </summary>
        </member>
        <member name="M:Agebull.Common.Server.Logging.Log4Recorder.Initialize">
            <summary>
              初始化
            </summary>
        </member>
        <member name="M:Agebull.Common.Server.Logging.Log4Recorder.RecordLog(Agebull.Common.Logging.RecordInfo)">
            <summary>
              记录日志
            </summary>
            <param name="info"> 日志消息 </param>
        </member>
        <member name="M:Agebull.Common.Server.Logging.Log4Recorder.Shutdown">
            <summary>
              停止
            </summary>
        </member>
        <member name="M:Agebull.Common.Server.Logging.Log4Recorder.Record(Agebull.Common.Server.Logging.LogContent)">
            <summary>
              写入调试日志
            </summary>
            <param name="lc"> 日志详细信息 </param>
        </member>
        <member name="M:Agebull.Common.Server.Logging.Log4Recorder.Record(System.String,System.String,System.String)">
            <summary>
              写入调试日志
            </summary>
            <param name="queryKey"> </param>
            <param name="message"> </param>
            <param name="user"> 用户 </param>
        </member>
        <member name="M:Agebull.Common.Server.Logging.Log4Recorder.Record(System.String,System.Object[])">
            <summary>
              写入一般日志
            </summary>
            <param name="message"> 日志详细信息 </param>
            <param name="formatArgs"> 格式化的参数 </param>
        </member>
        <member name="M:Agebull.Common.Server.Logging.Log4Recorder.Debug(System.String,System.Object[])">
            <summary>
              写入调试日志
            </summary>
            <param name="message"> 日志详细信息 </param>
            <param name="formatArgs"> 格式化的参数 </param>
        </member>
        <member name="M:Agebull.Common.Server.Logging.Log4Recorder.Debug(Agebull.Common.Server.Logging.LogContent)">
            <summary>
              写入调试日志
            </summary>
            <param name="lc"> 上下文 </param>
        </member>
        <member name="M:Agebull.Common.Server.Logging.Log4Recorder.Debug(System.String)">
            <summary>
              写入调试日志
            </summary>
            <param name="message"> 日志详细信息 </param>
        </member>
        <member name="M:Agebull.Common.Server.Logging.Log4Recorder.Exception(Agebull.Common.Server.Logging.LogContent)">
            <summary>
              写入调试日志
            </summary>
            <param name="lc"> 上下文 </param>
        </member>
        <member name="M:Agebull.Common.Server.Logging.Log4Recorder.Exception(System.Exception,System.String)">
            <summary>
              记录异常日志
            </summary>
            <param name="message"> 日志详细信息 </param>
            <param name="e"> 异常 </param>
        </member>
        <member name="M:Agebull.Common.Server.Logging.Log4Recorder.Exception(Agebull.Common.Server.Logging.LogContent,System.Exception)">
            <summary>
              记录异常日志
            </summary>
            <param name="lc"> 上下文 </param>
            <param name="e"> 异常 </param>
        </member>
        <member name="M:Agebull.Common.Server.Logging.Log4Recorder.Exception(System.Exception)">
            <summary>
              记录异常日志
            </summary>
            <param name="e"> 异常 </param>
            <returns> </returns>
        </member>
        <member name="M:Agebull.Common.Server.Logging.Log4Recorder.Record(System.String)">
            <summary>
              记录消息
            </summary>
            <param name="msg"> </param>
        </member>
        <member name="T:Agebull.Common.Server.Logging.LogContent">
            <summary>
              日志记录扩展对象
            </summary>
        </member>
        <member name="F:Agebull.Common.Server.Logging.LogContent._localeObject">
            <summary>
              现场需要保存的数据
            </summary>
        </member>
        <member name="P:Agebull.Common.Server.Logging.LogContent.Content">
            <summary>
              构造一个日志对象
            </summary>
        </member>
        <member name="P:Agebull.Common.Server.Logging.LogContent.QueryKey">
            <summary>
              查询标记
            </summary>
        </member>
        <member name="P:Agebull.Common.Server.Logging.LogContent.Sort">
            <summary>
              类型
            </summary>
        </member>
        <member name="P:Agebull.Common.Server.Logging.LogContent.Infomation">
            <summary>
              自定义消息
            </summary>
        </member>
        <member name="P:Agebull.Common.Server.Logging.LogContent.User">
            <summary>
              系统定义的序列化值
            </summary>
        </member>
        <member name="P:Agebull.Common.Server.Logging.LogContent.Locale">
            <summary>
              现场需要保存的数据的序列化值
            </summary>
        </member>
        <member name="P:Agebull.Common.Server.Logging.LogContent.LocaleObject">
            <summary>
              现场需要保存的数据
            </summary>
        </member>
        <member name="T:Agebull.Common.Server.Logging.MyMessagePatternConverter">
            <summary>
              消息转换器
            </summary>
        </member>
        <member name="M:Agebull.Common.Server.Logging.MyMessagePatternConverter.Convert(System.IO.TextWriter,log4net.Core.LoggingEvent)">
            <summary>
              转换
            </summary>
            <param name="writer"> </param>
            <param name="loggingEvent"> </param>
        </member>
        <member name="M:Agebull.Common.Server.Logging.MyMessagePatternConverter.LookupProperty(System.String,log4net.Core.LoggingEvent)">
            <summary>
              通过反射获取传入的日志对象的某个属性的值
            </summary>
            <param name="property"> </param>
            <param name="loggingEvent"> </param>
            <returns> </returns>
        </member>
        <member name="T:Agebull.Common.Server.Logging.MyPatternLayout">
            <summary>
              LOG4的记录辅助
            </summary>
        </member>
        <member name="M:Agebull.Common.Server.Logging.MyPatternLayout.#ctor">
            <summary>
              构造
            </summary>
        </member>
    </members>
</doc>
